// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: file.proto

package file_client

import (
	"context"

	"file/file"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = file.Request
	Response = file.Response

	File interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

func (m *defaultFile) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := file.NewFileClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
