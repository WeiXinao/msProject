// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: file.proto

package file

import (
	"context"

	"github.com/WeiXinao/msProject/api/proto/gen/file/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SourceDetail       = v1.SourceDetail
	TaskFileRequest    = v1.TaskFileRequest
	TaskFileResponse   = v1.TaskFileResponse
	TaskSourceMessage  = v1.TaskSourceMessage
	TaskSourceResponse = v1.TaskSourceResponse
	TaskSourcesRequest = v1.TaskSourcesRequest

	File interface {
		SaveTaskFile(ctx context.Context, in *TaskFileRequest, opts ...grpc.CallOption) (*TaskFileResponse, error)
		TaskSources(ctx context.Context, in *TaskSourcesRequest, opts ...grpc.CallOption) (*TaskSourceResponse, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

func (m *defaultFile) SaveTaskFile(ctx context.Context, in *TaskFileRequest, opts ...grpc.CallOption) (*TaskFileResponse, error) {
	client := v1.NewFileClient(m.cli.Conn())
	return client.SaveTaskFile(ctx, in, opts...)
}

func (m *defaultFile) TaskSources(ctx context.Context, in *TaskSourcesRequest, opts ...grpc.CallOption) (*TaskSourceResponse, error) {
	client := v1.NewFileClient(m.cli.Conn())
	return client.TaskSources(ctx, in, opts...)
}
