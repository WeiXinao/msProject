syntax = "proto3";

package api.proto.user.v1;
option go_package = "./api/proto/gen/user/v1;userv1";

message CaptchaRequest {
  string mobile = 1;
}
message CaptchaResponse {
  string code = 1;
}

message RegisterRequest {
  string email = 1;
  string name = 2;
  string password = 3;
  string mobile = 4;
  string captcha = 5;
}
message RegisterResponse{
}

message LoginRequest {
  string account = 1;
  string password = 2;
}
message LoginResponse {
  MemberMessage member = 1;
  repeated OrganizationMessage organizationList = 2;
  TokenMessage tokenList = 3;
}
message MemberMessage {
  int64 id = 1;
  string name = 2;
  string mobile = 3;
  string realname = 4;
  string account = 5;
  int32 status = 6;
  string lastLoginTime = 7;
  string address = 8;
  int32 province = 9;
  int32 city = 10;
  int32 area = 11;
  string email = 12;
  string code = 13;
  string createTime = 14;
  string organizationCode = 15;
  string avatar = 16;
}
message OrganizationMessage {
  int64 id = 1;
  string name = 2;
  string avatar = 3;
  string description = 4;
  int64 memberId = 5;
  string createTime = 6;
  int32 personal = 7;
  string address = 8;
  int32 province = 9;
  int32 city = 10;
  int32 area = 11;
  string code = 12;
  string ownerCode = 13;
}
message TokenMessage{
  string accessToken = 1;
  string refreshToken = 2;
  string tokenType = 3;
  int64 accessTokenExp = 4;
}

message MyOrgListRequest {
  int64 memId = 1;
}

message MyOrgListResponse {
  repeated OrganizationMessage organizationList = 1;
}

message MemberInfoRequest {
 int64 id = 1;
}

message MemberInfoResponse {
  MemberMessage member = 1;
}

message MemberInfosByIdRequest {
  repeated int64 mIds = 1;
}

message MemberInfosByIdResponse {
  repeated MemberMessage list = 1;
}

service LoginService {
  rpc GetCaptcha(CaptchaRequest) returns (CaptchaResponse);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc MyOrgList(MyOrgListRequest) returns (MyOrgListResponse);
  rpc MemberInfo(MemberInfoRequest) returns (MemberInfoResponse);
  rpc MemberInfosById(MemberInfosByIdRequest) returns (MemberInfosByIdResponse);
}
