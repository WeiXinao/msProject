// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: api/proto/project/v1/project.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *IndexRequest) Reset() {
	*x = IndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRequest) ProtoMessage() {}

func (x *IndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRequest.ProtoReflect.Descriptor instead.
func (*IndexRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{0}
}

func (x *IndexRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type IndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenuMessage `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *IndexResponse) Reset() {
	*x = IndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexResponse) ProtoMessage() {}

func (x *IndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexResponse.ProtoReflect.Descriptor instead.
func (*IndexResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{1}
}

func (x *IndexResponse) GetMenus() []*MenuMessage {
	if x != nil {
		return x.Menus
	}
	return nil
}

type MenuMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid        int64          `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Title      string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Icon       string         `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Url        string         `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	FilePath   string         `protobuf:"bytes,6,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Params     string         `protobuf:"bytes,7,opt,name=params,proto3" json:"params,omitempty"`
	Node       string         `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	Sort       int32          `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	Status     int32          `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy   int64          `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	IsInner    int32          `protobuf:"varint,12,opt,name=isInner,proto3" json:"isInner,omitempty"`
	Values     string         `protobuf:"bytes,13,opt,name=values,proto3" json:"values,omitempty"`
	ShowSlider int32          `protobuf:"varint,14,opt,name=showSlider,proto3" json:"showSlider,omitempty"`
	StatusText string         `protobuf:"bytes,15,opt,name=statusText,proto3" json:"statusText,omitempty"`
	InnerText  string         `protobuf:"bytes,16,opt,name=innerText,proto3" json:"innerText,omitempty"`
	FullUrl    string         `protobuf:"bytes,17,opt,name=fullUrl,proto3" json:"fullUrl,omitempty"`
	Children   []*MenuMessage `protobuf:"bytes,18,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuMessage) Reset() {
	*x = MenuMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMessage) ProtoMessage() {}

func (x *MenuMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMessage.ProtoReflect.Descriptor instead.
func (*MenuMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{2}
}

func (x *MenuMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuMessage) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MenuMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuMessage) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuMessage) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *MenuMessage) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *MenuMessage) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MenuMessage) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuMessage) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MenuMessage) GetIsInner() int32 {
	if x != nil {
		return x.IsInner
	}
	return 0
}

func (x *MenuMessage) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *MenuMessage) GetShowSlider() int32 {
	if x != nil {
		return x.ShowSlider
	}
	return 0
}

func (x *MenuMessage) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *MenuMessage) GetInnerText() string {
	if x != nil {
		return x.InnerText
	}
	return ""
}

func (x *MenuMessage) GetFullUrl() string {
	if x != nil {
		return x.FullUrl
	}
	return ""
}

func (x *MenuMessage) GetChildren() []*MenuMessage {
	if x != nil {
		return x.Children
	}
	return nil
}

type ProjectMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cover              string  `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AccessControlType  string  `protobuf:"bytes,5,opt,name=accessControlType,proto3" json:"accessControlType,omitempty"`
	WhiteList          string  `protobuf:"bytes,6,opt,name=whiteList,proto3" json:"whiteList,omitempty"`
	Order              int32   `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	Deleted            int32   `protobuf:"varint,8,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TemplateCode       string  `protobuf:"bytes,9,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Schedule           float64 `protobuf:"fixed64,10,opt,name=schedule,proto3" json:"schedule,omitempty"`
	CreateTime         string  `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OrganizationCode   int64   `protobuf:"varint,12,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	DeletedTime        string  `protobuf:"bytes,13,opt,name=deletedTime,proto3" json:"deletedTime,omitempty"`
	Private            int32   `protobuf:"varint,14,opt,name=private,proto3" json:"private,omitempty"`
	Prefix             string  `protobuf:"bytes,15,opt,name=prefix,proto3" json:"prefix,omitempty"`
	OpenPrefix         int32   `protobuf:"varint,16,opt,name=openPrefix,proto3" json:"openPrefix,omitempty"`
	Archive            int32   `protobuf:"varint,17,opt,name=archive,proto3" json:"archive,omitempty"`
	ArchiveTime        int64   `protobuf:"varint,18,opt,name=archiveTime,proto3" json:"archiveTime,omitempty"`
	OpenBeginTime      int32   `protobuf:"varint,19,opt,name=openBeginTime,proto3" json:"openBeginTime,omitempty"`
	OpenTaskPrivate    int32   `protobuf:"varint,20,opt,name=openTaskPrivate,proto3" json:"openTaskPrivate,omitempty"`
	TaskBoardTheme     string  `protobuf:"bytes,21,opt,name=taskBoardTheme,proto3" json:"taskBoardTheme,omitempty"`
	BeginTime          int64   `protobuf:"varint,22,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime            int64   `protobuf:"varint,23,opt,name=endTime,proto3" json:"endTime,omitempty"`
	AutoUpdateSchedule int32   `protobuf:"varint,24,opt,name=autoUpdateSchedule,proto3" json:"autoUpdateSchedule,omitempty"`
	ProjectCode        int64   `protobuf:"varint,25,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	MemberCode         int64   `protobuf:"varint,26,opt,name=memberCode,proto3" json:"memberCode,omitempty"`
	JoinTime           string  `protobuf:"bytes,27,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	IsOwner            int64   `protobuf:"varint,28,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
	Authorize          string  `protobuf:"bytes,29,opt,name=authorize,proto3" json:"authorize,omitempty"`
	Code               string  `protobuf:"bytes,30,opt,name=code,proto3" json:"code,omitempty"`
	OwnerName          string  `protobuf:"bytes,31,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	Collected          int32   `protobuf:"varint,32,opt,name=collected,proto3" json:"collected,omitempty"`
}

func (x *ProjectMessage) Reset() {
	*x = ProjectMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMessage) ProtoMessage() {}

func (x *ProjectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMessage.ProtoReflect.Descriptor instead.
func (*ProjectMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectMessage) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectMessage) GetAccessControlType() string {
	if x != nil {
		return x.AccessControlType
	}
	return ""
}

func (x *ProjectMessage) GetWhiteList() string {
	if x != nil {
		return x.WhiteList
	}
	return ""
}

func (x *ProjectMessage) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProjectMessage) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *ProjectMessage) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectMessage) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectMessage) GetOrganizationCode() int64 {
	if x != nil {
		return x.OrganizationCode
	}
	return 0
}

func (x *ProjectMessage) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

func (x *ProjectMessage) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectMessage) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectMessage) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectMessage) GetArchive() int32 {
	if x != nil {
		return x.Archive
	}
	return 0
}

func (x *ProjectMessage) GetArchiveTime() int64 {
	if x != nil {
		return x.ArchiveTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectMessage) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectMessage) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProjectMessage) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProjectMessage) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectMessage) GetProjectCode() int64 {
	if x != nil {
		return x.ProjectCode
	}
	return 0
}

func (x *ProjectMessage) GetMemberCode() int64 {
	if x != nil {
		return x.MemberCode
	}
	return 0
}

func (x *ProjectMessage) GetJoinTime() string {
	if x != nil {
		return x.JoinTime
	}
	return ""
}

func (x *ProjectMessage) GetIsOwner() int64 {
	if x != nil {
		return x.IsOwner
	}
	return 0
}

func (x *ProjectMessage) GetAuthorize() string {
	if x != nil {
		return x.Authorize
	}
	return ""
}

func (x *ProjectMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectMessage) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectMessage) GetCollected() int32 {
	if x != nil {
		return x.Collected
	}
	return 0
}

type ProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId   int64  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	MemberName string `protobuf:"bytes,2,opt,name=memberName,proto3" json:"memberName,omitempty"`
	Page       int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize   int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SelectBy   string `protobuf:"bytes,5,opt,name=selectBy,proto3" json:"selectBy,omitempty"`
}

func (x *ProjectRequest) Reset() {
	*x = ProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRequest) ProtoMessage() {}

func (x *ProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRequest.ProtoReflect.Descriptor instead.
func (*ProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ProjectRequest) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *ProjectRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProjectRequest) GetSelectBy() string {
	if x != nil {
		return x.SelectBy
	}
	return ""
}

type ProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pm    []*ProjectMessage `protobuf:"bytes,1,rep,name=pm,proto3" json:"pm,omitempty"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ProjectResponse) Reset() {
	*x = ProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse) ProtoMessage() {}

func (x *ProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse.ProtoReflect.Descriptor instead.
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectResponse) GetPm() []*ProjectMessage {
	if x != nil {
		return x.Pm
	}
	return nil
}

func (x *ProjectResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type FindProjectTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId         int64  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	MemberName       string `protobuf:"bytes,2,opt,name=memberName,proto3" json:"memberName,omitempty"`
	Page             int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize         int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SelectBy         string `protobuf:"bytes,5,opt,name=selectBy,proto3" json:"selectBy,omitempty"`
	OrganizationCode string `protobuf:"bytes,6,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	ViewType         int32  `protobuf:"varint,7,opt,name=viewType,proto3" json:"viewType,omitempty"`
}

func (x *FindProjectTemplateRequest) Reset() {
	*x = FindProjectTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProjectTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProjectTemplateRequest) ProtoMessage() {}

func (x *FindProjectTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProjectTemplateRequest.ProtoReflect.Descriptor instead.
func (*FindProjectTemplateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{6}
}

func (x *FindProjectTemplateRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *FindProjectTemplateRequest) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *FindProjectTemplateRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindProjectTemplateRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindProjectTemplateRequest) GetSelectBy() string {
	if x != nil {
		return x.SelectBy
	}
	return ""
}

func (x *FindProjectTemplateRequest) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *FindProjectTemplateRequest) GetViewType() int32 {
	if x != nil {
		return x.ViewType
	}
	return 0
}

type ProjectTemplateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Sort             int32         `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	CreateTime       string        `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OrganizationCode string        `protobuf:"bytes,6,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	Cover            string        `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	MemberCode       string        `protobuf:"bytes,8,opt,name=memberCode,proto3" json:"memberCode,omitempty"`
	IsSystem         int32         `protobuf:"varint,9,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	TaskStages       []*TaskStages `protobuf:"bytes,10,rep,name=taskStages,proto3" json:"taskStages,omitempty"`
	Code             string        `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ProjectTemplateMessage) Reset() {
	*x = ProjectTemplateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectTemplateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTemplateMessage) ProtoMessage() {}

func (x *ProjectTemplateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTemplateMessage.ProtoReflect.Descriptor instead.
func (*ProjectTemplateMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{7}
}

func (x *ProjectTemplateMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectTemplateMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectTemplateMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectTemplateMessage) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProjectTemplateMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectTemplateMessage) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectTemplateMessage) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectTemplateMessage) GetMemberCode() string {
	if x != nil {
		return x.MemberCode
	}
	return ""
}

func (x *ProjectTemplateMessage) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *ProjectTemplateMessage) GetTaskStages() []*TaskStages {
	if x != nil {
		return x.TaskStages
	}
	return nil
}

func (x *ProjectTemplateMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TaskStages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TaskStages) Reset() {
	*x = TaskStages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStages) ProtoMessage() {}

func (x *TaskStages) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStages.ProtoReflect.Descriptor instead.
func (*TaskStages) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{8}
}

func (x *TaskStages) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FindProjectTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ptm   []*ProjectTemplateMessage `protobuf:"bytes,1,rep,name=ptm,proto3" json:"ptm,omitempty"`
	Total int64                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *FindProjectTemplateResponse) Reset() {
	*x = FindProjectTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProjectTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProjectTemplateResponse) ProtoMessage() {}

func (x *FindProjectTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProjectTemplateResponse.ProtoReflect.Descriptor instead.
func (*FindProjectTemplateResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{9}
}

func (x *FindProjectTemplateResponse) GetPtm() []*ProjectTemplateMessage {
	if x != nil {
		return x.Ptm
	}
	return nil
}

func (x *FindProjectTemplateResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SaveProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId         int64  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	MemberName       string `protobuf:"bytes,2,opt,name=memberName,proto3" json:"memberName,omitempty"`
	Page             int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize         int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SelectBy         string `protobuf:"bytes,5,opt,name=selectBy,proto3" json:"selectBy,omitempty"`
	OrganizationCode string `protobuf:"bytes,6,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	ViewType         int32  `protobuf:"varint,7,opt,name=viewType,proto3" json:"viewType,omitempty"`
	Name             string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	TemplateCode     string `protobuf:"bytes,9,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Description      string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Id               int64  `protobuf:"varint,11,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SaveProjectReq) Reset() {
	*x = SaveProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProjectReq) ProtoMessage() {}

func (x *SaveProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProjectReq.ProtoReflect.Descriptor instead.
func (*SaveProjectReq) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{10}
}

func (x *SaveProjectReq) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SaveProjectReq) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *SaveProjectReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SaveProjectReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SaveProjectReq) GetSelectBy() string {
	if x != nil {
		return x.SelectBy
	}
	return ""
}

func (x *SaveProjectReq) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *SaveProjectReq) GetViewType() int32 {
	if x != nil {
		return x.ViewType
	}
	return 0
}

func (x *SaveProjectReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveProjectReq) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *SaveProjectReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveProjectReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SaveProjectRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Cover            string `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description      string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Code             string `protobuf:"bytes,5,opt,name=Code,proto3" json:"Code,omitempty"`
	CreateTime       string `protobuf:"bytes,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	TaskBoardTheme   string `protobuf:"bytes,7,opt,name=TaskBoardTheme,proto3" json:"TaskBoardTheme,omitempty"`
	OrganizationCode string `protobuf:"bytes,8,opt,name=OrganizationCode,proto3" json:"OrganizationCode,omitempty"`
}

func (x *SaveProjectRsp) Reset() {
	*x = SaveProjectRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProjectRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProjectRsp) ProtoMessage() {}

func (x *SaveProjectRsp) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProjectRsp.ProtoReflect.Descriptor instead.
func (*SaveProjectRsp) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{11}
}

func (x *SaveProjectRsp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveProjectRsp) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SaveProjectRsp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveProjectRsp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveProjectRsp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SaveProjectRsp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SaveProjectRsp) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *SaveProjectRsp) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

type ProjectDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectCode string `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	MemberId    int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
}

func (x *ProjectDetailRequest) Reset() {
	*x = ProjectDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDetailRequest) ProtoMessage() {}

func (x *ProjectDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDetailRequest.ProtoReflect.Descriptor instead.
func (*ProjectDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectDetailRequest) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *ProjectDetailRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type ProjectDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cover              string  `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AccessControlType  string  `protobuf:"bytes,5,opt,name=accessControlType,proto3" json:"accessControlType,omitempty"`
	WhiteList          string  `protobuf:"bytes,6,opt,name=whiteList,proto3" json:"whiteList,omitempty"`
	Order              int32   `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	Deleted            int32   `protobuf:"varint,8,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TemplateCode       string  `protobuf:"bytes,9,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Schedule           float64 `protobuf:"fixed64,10,opt,name=schedule,proto3" json:"schedule,omitempty"`
	CreateTime         string  `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OrganizationCode   string  `protobuf:"bytes,12,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	DeletedTime        string  `protobuf:"bytes,13,opt,name=deletedTime,proto3" json:"deletedTime,omitempty"`
	Private            int32   `protobuf:"varint,14,opt,name=private,proto3" json:"private,omitempty"`
	Prefix             string  `protobuf:"bytes,15,opt,name=prefix,proto3" json:"prefix,omitempty"`
	OpenPrefix         int32   `protobuf:"varint,16,opt,name=openPrefix,proto3" json:"openPrefix,omitempty"`
	Archive            int32   `protobuf:"varint,17,opt,name=archive,proto3" json:"archive,omitempty"`
	ArchiveTime        int64   `protobuf:"varint,18,opt,name=archiveTime,proto3" json:"archiveTime,omitempty"`
	OpenBeginTime      int32   `protobuf:"varint,19,opt,name=openBeginTime,proto3" json:"openBeginTime,omitempty"`
	OpenTaskPrivate    int32   `protobuf:"varint,20,opt,name=openTaskPrivate,proto3" json:"openTaskPrivate,omitempty"`
	TaskBoardTheme     string  `protobuf:"bytes,21,opt,name=taskBoardTheme,proto3" json:"taskBoardTheme,omitempty"`
	BeginTime          int64   `protobuf:"varint,22,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime            int64   `protobuf:"varint,23,opt,name=endTime,proto3" json:"endTime,omitempty"`
	AutoUpdateSchedule int32   `protobuf:"varint,24,opt,name=autoUpdateSchedule,proto3" json:"autoUpdateSchedule,omitempty"`
	Code               string  `protobuf:"bytes,25,opt,name=code,proto3" json:"code,omitempty"`
	IsOwner            int64   `protobuf:"varint,26,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
	OwnerName          string  `protobuf:"bytes,27,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	Collected          int32   `protobuf:"varint,28,opt,name=collected,proto3" json:"collected,omitempty"`
	OwnerAvatar        string  `protobuf:"bytes,29,opt,name=ownerAvatar,proto3" json:"ownerAvatar,omitempty"`
}

func (x *ProjectDetailResponse) Reset() {
	*x = ProjectDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDetailResponse) ProtoMessage() {}

func (x *ProjectDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDetailResponse.ProtoReflect.Descriptor instead.
func (*ProjectDetailResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{13}
}

func (x *ProjectDetailResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectDetailResponse) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectDetailResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectDetailResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectDetailResponse) GetAccessControlType() string {
	if x != nil {
		return x.AccessControlType
	}
	return ""
}

func (x *ProjectDetailResponse) GetWhiteList() string {
	if x != nil {
		return x.WhiteList
	}
	return ""
}

func (x *ProjectDetailResponse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProjectDetailResponse) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *ProjectDetailResponse) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectDetailResponse) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectDetailResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectDetailResponse) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectDetailResponse) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

func (x *ProjectDetailResponse) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectDetailResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectDetailResponse) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectDetailResponse) GetArchive() int32 {
	if x != nil {
		return x.Archive
	}
	return 0
}

func (x *ProjectDetailResponse) GetArchiveTime() int64 {
	if x != nil {
		return x.ArchiveTime
	}
	return 0
}

func (x *ProjectDetailResponse) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectDetailResponse) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectDetailResponse) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectDetailResponse) GetBeginTime() int64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *ProjectDetailResponse) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ProjectDetailResponse) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectDetailResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectDetailResponse) GetIsOwner() int64 {
	if x != nil {
		return x.IsOwner
	}
	return 0
}

func (x *ProjectDetailResponse) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectDetailResponse) GetCollected() int32 {
	if x != nil {
		return x.Collected
	}
	return 0
}

func (x *ProjectDetailResponse) GetOwnerAvatar() string {
	if x != nil {
		return x.OwnerAvatar
	}
	return ""
}

type RecycleProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectCode string `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Deleted     bool   `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *RecycleProjectRequest) Reset() {
	*x = RecycleProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleProjectRequest) ProtoMessage() {}

func (x *RecycleProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleProjectRequest.ProtoReflect.Descriptor instead.
func (*RecycleProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{14}
}

func (x *RecycleProjectRequest) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *RecycleProjectRequest) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

type RecycleProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecycleProjectResponse) Reset() {
	*x = RecycleProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecycleProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecycleProjectResponse) ProtoMessage() {}

func (x *RecycleProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecycleProjectResponse.ProtoReflect.Descriptor instead.
func (*RecycleProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{15}
}

type UpdateCollectProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectCode string `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	CollectType string `protobuf:"bytes,2,opt,name=collectType,proto3" json:"collectType,omitempty"`
	MemberId    int64  `protobuf:"varint,3,opt,name=memberId,proto3" json:"memberId,omitempty"`
}

func (x *UpdateCollectProjectRequest) Reset() {
	*x = UpdateCollectProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectProjectRequest) ProtoMessage() {}

func (x *UpdateCollectProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateCollectProjectRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCollectProjectRequest) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *UpdateCollectProjectRequest) GetCollectType() string {
	if x != nil {
		return x.CollectType
	}
	return ""
}

func (x *UpdateCollectProjectRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type UpdateCollectProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCollectProjectResponse) Reset() {
	*x = UpdateCollectProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCollectProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectProjectResponse) ProtoMessage() {}

func (x *UpdateCollectProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCollectProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateCollectProjectResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_proto_rawDescGZIP(), []int{17}
}

var File_api_proto_project_v1_project_proto protoreflect.FileDescriptor

var file_api_proto_project_v1_project_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x22, 0x24, 0x0a, 0x0c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x48, 0x0a, 0x0d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x22, 0xe4, 0x03, 0x0a, 0x0b, 0x4d,
	0x65, 0x6e, 0x75, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x77, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x68, 0x6f, 0x77, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6c, 0x6c,
	0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6c, 0x6c, 0x55,
	0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0xea, 0x07, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x98,
	0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x22, 0x5d, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x02,
	0x70, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02,
	0x70, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xec, 0x01, 0x0a, 0x1a, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x79, 0x12,
	0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76,
	0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe6, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x20, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x73, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x03, 0x70, 0x74, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x70, 0x74,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xca, 0x02, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x97, 0x07, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x6f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x75, 0x74,
	0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x53, 0x0a, 0x15, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfb, 0x05, 0x0a, 0x0e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4d,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7a, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x0b, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x74, 0x0a, 0x17, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x4f, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_project_v1_project_proto_rawDescOnce sync.Once
	file_api_proto_project_v1_project_proto_rawDescData = file_api_proto_project_v1_project_proto_rawDesc
)

func file_api_proto_project_v1_project_proto_rawDescGZIP() []byte {
	file_api_proto_project_v1_project_proto_rawDescOnce.Do(func() {
		file_api_proto_project_v1_project_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_project_v1_project_proto_rawDescData)
	})
	return file_api_proto_project_v1_project_proto_rawDescData
}

var file_api_proto_project_v1_project_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_proto_project_v1_project_proto_goTypes = []any{
	(*IndexRequest)(nil),                 // 0: api.proto.project.v1.IndexRequest
	(*IndexResponse)(nil),                // 1: api.proto.project.v1.IndexResponse
	(*MenuMessage)(nil),                  // 2: api.proto.project.v1.MenuMessage
	(*ProjectMessage)(nil),               // 3: api.proto.project.v1.ProjectMessage
	(*ProjectRequest)(nil),               // 4: api.proto.project.v1.ProjectRequest
	(*ProjectResponse)(nil),              // 5: api.proto.project.v1.ProjectResponse
	(*FindProjectTemplateRequest)(nil),   // 6: api.proto.project.v1.FindProjectTemplateRequest
	(*ProjectTemplateMessage)(nil),       // 7: api.proto.project.v1.ProjectTemplateMessage
	(*TaskStages)(nil),                   // 8: api.proto.project.v1.TaskStages
	(*FindProjectTemplateResponse)(nil),  // 9: api.proto.project.v1.FindProjectTemplateResponse
	(*SaveProjectReq)(nil),               // 10: api.proto.project.v1.SaveProjectReq
	(*SaveProjectRsp)(nil),               // 11: api.proto.project.v1.SaveProjectRsp
	(*ProjectDetailRequest)(nil),         // 12: api.proto.project.v1.ProjectDetailRequest
	(*ProjectDetailResponse)(nil),        // 13: api.proto.project.v1.ProjectDetailResponse
	(*RecycleProjectRequest)(nil),        // 14: api.proto.project.v1.RecycleProjectRequest
	(*RecycleProjectResponse)(nil),       // 15: api.proto.project.v1.RecycleProjectResponse
	(*UpdateCollectProjectRequest)(nil),  // 16: api.proto.project.v1.UpdateCollectProjectRequest
	(*UpdateCollectProjectResponse)(nil), // 17: api.proto.project.v1.UpdateCollectProjectResponse
}
var file_api_proto_project_v1_project_proto_depIdxs = []int32{
	2,  // 0: api.proto.project.v1.IndexResponse.menus:type_name -> api.proto.project.v1.MenuMessage
	2,  // 1: api.proto.project.v1.MenuMessage.children:type_name -> api.proto.project.v1.MenuMessage
	3,  // 2: api.proto.project.v1.ProjectResponse.pm:type_name -> api.proto.project.v1.ProjectMessage
	8,  // 3: api.proto.project.v1.ProjectTemplateMessage.taskStages:type_name -> api.proto.project.v1.TaskStages
	7,  // 4: api.proto.project.v1.FindProjectTemplateResponse.ptm:type_name -> api.proto.project.v1.ProjectTemplateMessage
	0,  // 5: api.proto.project.v1.ProjectService.Index:input_type -> api.proto.project.v1.IndexRequest
	4,  // 6: api.proto.project.v1.ProjectService.FindProjectByMemId:input_type -> api.proto.project.v1.ProjectRequest
	6,  // 7: api.proto.project.v1.ProjectService.FindProjectTemplate:input_type -> api.proto.project.v1.FindProjectTemplateRequest
	10, // 8: api.proto.project.v1.ProjectService.SaveProject:input_type -> api.proto.project.v1.SaveProjectReq
	12, // 9: api.proto.project.v1.ProjectService.ProjectDetail:input_type -> api.proto.project.v1.ProjectDetailRequest
	14, // 10: api.proto.project.v1.ProjectService.RecycleOrRecoverProject:input_type -> api.proto.project.v1.RecycleProjectRequest
	16, // 11: api.proto.project.v1.ProjectService.UpdateCollectProject:input_type -> api.proto.project.v1.UpdateCollectProjectRequest
	1,  // 12: api.proto.project.v1.ProjectService.Index:output_type -> api.proto.project.v1.IndexResponse
	5,  // 13: api.proto.project.v1.ProjectService.FindProjectByMemId:output_type -> api.proto.project.v1.ProjectResponse
	9,  // 14: api.proto.project.v1.ProjectService.FindProjectTemplate:output_type -> api.proto.project.v1.FindProjectTemplateResponse
	11, // 15: api.proto.project.v1.ProjectService.SaveProject:output_type -> api.proto.project.v1.SaveProjectRsp
	13, // 16: api.proto.project.v1.ProjectService.ProjectDetail:output_type -> api.proto.project.v1.ProjectDetailResponse
	15, // 17: api.proto.project.v1.ProjectService.RecycleOrRecoverProject:output_type -> api.proto.project.v1.RecycleProjectResponse
	17, // 18: api.proto.project.v1.ProjectService.UpdateCollectProject:output_type -> api.proto.project.v1.UpdateCollectProjectResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_project_v1_project_proto_init() }
func file_api_proto_project_v1_project_proto_init() {
	if File_api_proto_project_v1_project_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_project_v1_project_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*IndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MenuMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FindProjectTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectTemplateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TaskStages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*FindProjectTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SaveProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SaveProjectRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ProjectDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*RecycleProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCollectProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCollectProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_project_v1_project_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_project_v1_project_proto_goTypes,
		DependencyIndexes: file_api_proto_project_v1_project_proto_depIdxs,
		MessageInfos:      file_api_proto_project_v1_project_proto_msgTypes,
	}.Build()
	File_api_proto_project_v1_project_proto = out.File
	file_api_proto_project_v1_project_proto_rawDesc = nil
	file_api_proto_project_v1_project_proto_goTypes = nil
	file_api_proto_project_v1_project_proto_depIdxs = nil
}
