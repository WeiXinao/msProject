syntax = "v1"

type GetCaptchaReq {
	Mobile string `form:"mobile"`
}

type GetCaptchaResp {
	Captcha string `json:"captcha"`
}

type RegisterReq {
	Email     string `form:"email"`
	Name      string `form:"name"`
	Password  string `form:"password"`
	Password2 string `form:"password2"`
	Mobile    string `form:"mobile"`
	Captcha   string `form:"captcha"`
}

type RegisterResp {}

type LoginReq {
	Account  string `form:"account"`
	Password string `form:"password"`
}

type LoginRsp {
	Member           Member             `json:"member"`
	TokenList        TokenList          `json:"tokenList"`
	OrganizationList []OrganizationList `json:"organizationList"`
}

type Member {
	Name             string `json:"name"`
	Mobile           string `json:"mobile"`
	Status           int    `json:"status"`
	Code             string `json:"code"`
	CreateTime       string `json:"create_time"`
	LastLoginTime    string `json:"last_login_time"`
	OrganizationCode string `json:"organization_code"`
}

type TokenList {
	AccessToken    string `json:"accessToken"`
	RefreshToken   string `json:"refreshToken"`
	TokenType      string `json:"tokenType"`
	AccessTokenExp int64  `json:"accessTokenExp"`
}

type OrganizationList {
	Name        string `json:"name"`
	Avatar      string `json:"avatar"`
	Description string `json:"description"`
	OwnerCode   string `json:"owner_code"`
	CreateTime  string `json:"create_time"`
	Personal    int32  `json:"personal"`
	Address     string `json:"address"`
	Province    int32  `json:"province"`
	City        int32  `json:"city"`
	Area        int32  `json:"area"`
	Code        string `json:"code"`
}

@server (
	prefix: /project
	group:  user
)
service bff {
	@handler GetCaptcha
	post /login/getCaptcha (GetCaptchaReq) returns (GetCaptchaResp)

	@handler Register
	post /login/register (RegisterReq) returns (RegisterResp)

	@handler Login
	post /login (LoginReq) returns (LoginRsp)
}

type IndexReq {
	Token string `header:"Authorization,optional"`
}

type MenuMessage {
	Id         int64          `json:"id"`
	Pid        int64          `json:"pid"`
	Title      string         `json:"title"`
	Icon       string         `json:"icon"`
	Url        string         `json:"url"`
	FilePath   string         `json:"file_path"`
	Params     string         `json:"params"`
	Node       string         `json:"node"`
	Sort       int32          `json:"sort"`
	Status     int32          `json:"status"`
	CreateBy   int64          `json:"create_by"`
	IsInner    int32          `json:"is_inner"`
	Values     string         `json:"values"`
	ShowSlider int32          `json:"show_slider"`
	StatusText string         `json:"statusText"`
	InnerText  string         `json:"innerText"`
	FullUrl    string         `json:"fullUrl"`
	Children   []*MenuMessage `json:"children"`
}

type IndexRsp {
	Menus []*MenuMessage `json:"menus"`
}

type SelfListReq {
	Page     int64  `form:"page,default=1"`
	PageSize int64  `form:"pageSize,default=10"`
	SelectBy string `form:"selectBy,optional"`
}

type Project {
	Cover              string  `json:"cover"`
	Name               string  `json:"name"`
	Description        string  `json:"description"`
	AccessControlType  string  `json:"access_control_type"`
	WhiteList          string  `json:"white_list"`
	Order              int     `json:"order"`
	Deleted            int     `json:"deleted"`
	TemplateCode       string  `json:"template_code"`
	Schedule           float64 `json:"schedule"`
	CreateTime         string  `json:"create_time"`
	OrganizationCode   int64   `json:"organization_code"`
	DeletedTime        string  `json:"deleted_time"`
	Private            int     `json:"private"`
	Prefix             string  `json:"prefix"`
	OpenPrefix         int     `json:"open_prefix"`
	Archive            int     `json:"archive"`
	ArchiveTime        int64   `json:"archive_time"`
	OpenBeginTime      int     `json:"open_begin_time"`
	OpenTaskPrivate    int     `json:"open_task_private"`
	TaskBoardTheme     string  `json:"task_board_theme"`
	BeginTime          int64   `json:"begin_time"`
	EndTime            int64   `json:"end_time"`
	AutoUpdateSchedule int     `json:"auto_update_schedule"`
	Code               string  `json:"code"`
}

type ProjectMember {
	Id          int64  `json:"id"`
	ProjectCode int64  `json:"project_code"`
	MemberCode  int64  `json:"member_code"`
	JoinTime    int64  `json:"join_time"`
	IsOwner     int64  `json:"is_owner"`
	Authorize   string `json:"authorize"`
}

type ProjectAndMember {
	Project
	ProjectCode int64  `json:"project_code"`
	MemberCode  int64  `json:"member_code"`
	JoinTime    int64  `json:"join_time"`
	IsOwner     int64  `json:"is_owner"`
	Authorize   string `json:"authorize"`
	OwnerName   string `json:"owner_name"`
	Collected   int    `json:"collected"`
}

type SelfListRsp {
	List  []*ProjectAndMember `json:"list"`
	Total int64               `json:"total"`
}

type ProjectTemplateReq {
	Page     int64 `form:"page,default=1"`
	PageSize int64 `form:"pageSize,default=10"`
	ViewType int32 `form:"viewType"`
}

type TaskStagesOnlyName {
	Name string `json:"name"`
}

type ProjectTemplate {
	Id               int                   `json:"id"`
	Name             string                `json:"name"`
	Description      string                `json:"description"`
	Sort             int                   `json:"sort"`
	CreateTime       string                `json:"create_time"`
	OrganizationCode string                `json:"organization_code"`
	Cover            string                `json:"cover"`
	MemberCode       string                `json:"member_code"`
	IsSystem         int                   `json:"is_system"`
	TaskStages       []*TaskStagesOnlyName `json:"task_stages"`
	Code             string                `json:"code"`
}

type ProjectTemplateRsp {
	Ptm   []*ProjectTemplate `json:"list"`
	Total int64              `json:"total"`
}

type ProjectSaveReq {
	Name         string `form:"name"`
	TemplateCode string `form:"templateCode"`
	Description  string `form:"description"`
	Id           int    `form:"id"`
}

type ProjectSaveRsp {
	Id               int64  `json:"id"`
	Cover            string `json:"cover"`
	Name             string `json:"name"`
	Description      string `json:"description"`
	Code             string `json:"code"`
	CreateTime       string `json:"create_time"`
	TaskBoardTheme   string `json:"task_board_theme"`
	OrganizationCode string `json:"organization_code"`
}

type ReadProjectReq {
	ProjectCode string `form:"projectCode"`
}

type ReadProjectRsp {
	Cover              string  `json:"cover"`
	Name               string  `json:"name"`
	Description        string  `json:"description"`
	AccessControlType  string  `json:"access_control_type"`
	WhiteList          string  `json:"white_list"`
	Order              int     `json:"order"`
	Deleted            int     `json:"deleted"`
	TemplateCode       string  `json:"template_code"`
	Schedule           float64 `json:"schedule"`
	CreateTime         string  `json:"create_time"`
	OrganizationCode   string  `json:"organization_code"`
	DeletedTime        string  `json:"deleted_time"`
	Private            int     `json:"private"`
	Prefix             string  `json:"prefix"`
	OpenPrefix         int     `json:"open_prefix"`
	Archive            int     `json:"archive"`
	ArchiveTime        int64   `json:"archive_time"`
	OpenBeginTime      int     `json:"open_begin_time"`
	OpenTaskPrivate    int     `json:"open_task_private"`
	TaskBoardTheme     string  `json:"task_board_theme"`
	BeginTime          int64   `json:"begin_time"`
	EndTime            int64   `json:"end_time"`
	AutoUpdateSchedule int     `json:"auto_update_schedule"`
	Code               string  `json:"code"`

	OwnerName          string  `json:"owner_name"`
	Collected          int     `json:"collected"`
	OwnerAvatar        string  `json:"owner_avatar"`
}

@server (
	prefix:     /project
	group:      project
	middleware: AuthMiddleware
)
service bff {
	@handler Index
	post /index (IndexReq) returns (IndexRsp)

	@handler MyProjectList
	post /project/selfList (SelfListReq) returns (SelfListRsp)

	@handler ProjectList
	post /project (SelfListReq) returns (SelfListRsp)

	@handler ProjectTemplate
	post /project_template (ProjectTemplateReq) returns (ProjectTemplateRsp)

	@handler ProjectSave
	post /project/save (ProjectSaveReq) returns (ProjectSaveRsp)

	@handler ReadProject
	post /project/read (ReadProjectReq) returns (ReadProjectRsp)
}

type GetOrgListReq {}

type GetOrgListRsp {
	OrganizationList []OrganizationList `json:"organizationList"`
}

@server (
	prefix:     /project/organization
	group:      organization
	middleware: AuthMiddleware
)
service bff {
	@handler MyOrgList
	post /_getOrgList (GetOrgListRsp) returns (GetOrgListRsp)
}

