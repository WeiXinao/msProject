// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: user.proto

package loginservice

import (
	"context"

	v1_userv1 "github.com/WeiXinao/msProject/api/proto/gen/user/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CaptchaRequest          = v1_userv1.CaptchaRequest
	CaptchaResponse         = v1_userv1.CaptchaResponse
	LoginRequest            = v1_userv1.LoginRequest
	LoginResponse           = v1_userv1.LoginResponse
	MemberInfoRequest       = v1_userv1.MemberInfoRequest
	MemberInfoResponse      = v1_userv1.MemberInfoResponse
	MemberInfosByIdRequest  = v1_userv1.MemberInfosByIdRequest
	MemberInfosByIdResponse = v1_userv1.MemberInfosByIdResponse
	MemberMessage           = v1_userv1.MemberMessage
	MyOrgListRequest        = v1_userv1.MyOrgListRequest
	MyOrgListResponse       = v1_userv1.MyOrgListResponse
	OrganizationMessage     = v1_userv1.OrganizationMessage
	RegisterRequest         = v1_userv1.RegisterRequest
	RegisterResponse        = v1_userv1.RegisterResponse
	TokenMessage            = v1_userv1.TokenMessage

	LoginService interface {
		GetCaptcha(ctx context.Context, in *CaptchaRequest, opts ...grpc.CallOption) (*CaptchaResponse, error)
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		MyOrgList(ctx context.Context, in *MyOrgListRequest, opts ...grpc.CallOption) (*MyOrgListResponse, error)
		MemberInfo(ctx context.Context, in *MemberInfoRequest, opts ...grpc.CallOption) (*MemberInfoResponse, error)
		MemberInfosById(ctx context.Context, in *MemberInfosByIdRequest, opts ...grpc.CallOption) (*MemberInfosByIdResponse, error)
	}

	defaultLoginService struct {
		cli zrpc.Client
	}
)

func NewLoginService(cli zrpc.Client) LoginService {
	return &defaultLoginService{
		cli: cli,
	}
}

func (m *defaultLoginService) GetCaptcha(ctx context.Context, in *CaptchaRequest, opts ...grpc.CallOption) (*CaptchaResponse, error) {
	client := v1_userv1.NewLoginServiceClient(m.cli.Conn())
	return client.GetCaptcha(ctx, in, opts...)
}

func (m *defaultLoginService) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := v1_userv1.NewLoginServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultLoginService) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := v1_userv1.NewLoginServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultLoginService) MyOrgList(ctx context.Context, in *MyOrgListRequest, opts ...grpc.CallOption) (*MyOrgListResponse, error) {
	client := v1_userv1.NewLoginServiceClient(m.cli.Conn())
	return client.MyOrgList(ctx, in, opts...)
}

func (m *defaultLoginService) MemberInfo(ctx context.Context, in *MemberInfoRequest, opts ...grpc.CallOption) (*MemberInfoResponse, error) {
	client := v1_userv1.NewLoginServiceClient(m.cli.Conn())
	return client.MemberInfo(ctx, in, opts...)
}

func (m *defaultLoginService) MemberInfosById(ctx context.Context, in *MemberInfosByIdRequest, opts ...grpc.CallOption) (*MemberInfosByIdResponse, error) {
	client := v1_userv1.NewLoginServiceClient(m.cli.Conn())
	return client.MemberInfosById(ctx, in, opts...)
}
