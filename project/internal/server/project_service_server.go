// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: project.proto

package server

import (
	"context"

	"github.com/WeiXinao/msProject/project/internal/logic"
	"github.com/WeiXinao/msProject/project/internal/svc"
	"github.com/WeiXinao/msProject/api/proto/gen/project/v1"
)

type ProjectServiceServer struct {
	svcCtx *svc.ServiceContext
	v1.UnimplementedProjectServiceServer
}

func NewProjectServiceServer(svcCtx *svc.ServiceContext) *ProjectServiceServer {
	return &ProjectServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *ProjectServiceServer) FindProjectByMemberId(ctx context.Context, in *v1.FindProjectByMemberIdRequest) (*v1.FindProjectByMemberIdResponse, error) {
	l := logic.NewFindProjectByMemberIdLogic(ctx, s.svcCtx)
	return l.FindProjectByMemberId(in)
}

func (s *ProjectServiceServer) Index(ctx context.Context, in *v1.IndexRequest) (*v1.IndexResponse, error) {
	l := logic.NewIndexLogic(ctx, s.svcCtx)
	return l.Index(in)
}

func (s *ProjectServiceServer) FindProjectByMemId(ctx context.Context, in *v1.ProjectRequest) (*v1.ProjectResponse, error) {
	l := logic.NewFindProjectByMemIdLogic(ctx, s.svcCtx)
	return l.FindProjectByMemId(in)
}

func (s *ProjectServiceServer) FindProjectTemplate(ctx context.Context, in *v1.FindProjectTemplateRequest) (*v1.FindProjectTemplateResponse, error) {
	l := logic.NewFindProjectTemplateLogic(ctx, s.svcCtx)
	return l.FindProjectTemplate(in)
}

func (s *ProjectServiceServer) SaveProject(ctx context.Context, in *v1.SaveProjectReq) (*v1.SaveProjectRsp, error) {
	l := logic.NewSaveProjectLogic(ctx, s.svcCtx)
	return l.SaveProject(in)
}

func (s *ProjectServiceServer) ProjectDetail(ctx context.Context, in *v1.ProjectDetailRequest) (*v1.ProjectDetailResponse, error) {
	l := logic.NewProjectDetailLogic(ctx, s.svcCtx)
	return l.ProjectDetail(in)
}

func (s *ProjectServiceServer) RecycleOrRecoverProject(ctx context.Context, in *v1.RecycleProjectRequest) (*v1.RecycleProjectResponse, error) {
	l := logic.NewRecycleOrRecoverProjectLogic(ctx, s.svcCtx)
	return l.RecycleOrRecoverProject(in)
}

func (s *ProjectServiceServer) UpdateCollectProject(ctx context.Context, in *v1.UpdateCollectProjectRequest) (*v1.UpdateCollectProjectResponse, error) {
	l := logic.NewUpdateCollectProjectLogic(ctx, s.svcCtx)
	return l.UpdateCollectProject(in)
}

func (s *ProjectServiceServer) UpdateProject(ctx context.Context, in *v1.UpdateProjectRequest) (*v1.UpdateProjectResponse, error) {
	l := logic.NewUpdateProjectLogic(ctx, s.svcCtx)
	return l.UpdateProject(in)
}

func (s *ProjectServiceServer) ProjectMemberList(ctx context.Context, in *v1.ProjectMemberListRequest) (*v1.ProjectMemberListResponse, error) {
	l := logic.NewProjectMemberListLogic(ctx, s.svcCtx)
	return l.ProjectMemberList(in)
}

func (s *ProjectServiceServer) FindProjectById(ctx context.Context, in *v1.FindProjectByIdRequest) (*v1.ProjectMessage, error) {
	l := logic.NewFindProjectByIdLogic(ctx, s.svcCtx)
	return l.FindProjectById(in)
}

func (s *ProjectServiceServer) FindProjectByIds(ctx context.Context, in *v1.FindProjectByIdsRequest) (*v1.FindProjectByIdsResponse, error) {
	l := logic.NewFindProjectByIdsLogic(ctx, s.svcCtx)
	return l.FindProjectByIds(in)
}
