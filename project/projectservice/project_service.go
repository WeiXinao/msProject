// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: project.proto

package projectservice

import (
	"context"

	"github.com/WeiXinao/msProject/api/proto/gen/project/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindProjectByIdRequest       = v1.FindProjectByIdRequest
	FindProjectByIdsRequest      = v1.FindProjectByIdsRequest
	FindProjectByIdsResponse     = v1.FindProjectByIdsResponse
	FindProjectTemplateRequest   = v1.FindProjectTemplateRequest
	FindProjectTemplateResponse  = v1.FindProjectTemplateResponse
	IndexRequest                 = v1.IndexRequest
	IndexResponse                = v1.IndexResponse
	MenuMessage                  = v1.MenuMessage
	ProjectDetailRequest         = v1.ProjectDetailRequest
	ProjectDetailResponse        = v1.ProjectDetailResponse
	ProjectMemberListRequest     = v1.ProjectMemberListRequest
	ProjectMemberListResponse    = v1.ProjectMemberListResponse
	ProjectMemberMessage         = v1.ProjectMemberMessage
	ProjectMessage               = v1.ProjectMessage
	ProjectRequest               = v1.ProjectRequest
	ProjectResponse              = v1.ProjectResponse
	ProjectTemplateMessage       = v1.ProjectTemplateMessage
	RecycleProjectRequest        = v1.RecycleProjectRequest
	RecycleProjectResponse       = v1.RecycleProjectResponse
	SaveProjectReq               = v1.SaveProjectReq
	SaveProjectRsp               = v1.SaveProjectRsp
	TaskStages                   = v1.TaskStages
	UpdateCollectProjectRequest  = v1.UpdateCollectProjectRequest
	UpdateCollectProjectResponse = v1.UpdateCollectProjectResponse
	UpdateProjectRequest         = v1.UpdateProjectRequest
	UpdateProjectResponse        = v1.UpdateProjectResponse

	ProjectService interface {
		Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*IndexResponse, error)
		FindProjectByMemId(ctx context.Context, in *ProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error)
		FindProjectTemplate(ctx context.Context, in *FindProjectTemplateRequest, opts ...grpc.CallOption) (*FindProjectTemplateResponse, error)
		SaveProject(ctx context.Context, in *SaveProjectReq, opts ...grpc.CallOption) (*SaveProjectRsp, error)
		ProjectDetail(ctx context.Context, in *ProjectDetailRequest, opts ...grpc.CallOption) (*ProjectDetailResponse, error)
		RecycleOrRecoverProject(ctx context.Context, in *RecycleProjectRequest, opts ...grpc.CallOption) (*RecycleProjectResponse, error)
		UpdateCollectProject(ctx context.Context, in *UpdateCollectProjectRequest, opts ...grpc.CallOption) (*UpdateCollectProjectResponse, error)
		UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error)
		ProjectMemberList(ctx context.Context, in *ProjectMemberListRequest, opts ...grpc.CallOption) (*ProjectMemberListResponse, error)
		FindProjectById(ctx context.Context, in *FindProjectByIdRequest, opts ...grpc.CallOption) (*ProjectMessage, error)
		FindProjectByIds(ctx context.Context, in *FindProjectByIdsRequest, opts ...grpc.CallOption) (*FindProjectByIdsResponse, error)
	}

	defaultProjectService struct {
		cli zrpc.Client
	}
)

func NewProjectService(cli zrpc.Client) ProjectService {
	return &defaultProjectService{
		cli: cli,
	}
}

func (m *defaultProjectService) Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*IndexResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.Index(ctx, in, opts...)
}

func (m *defaultProjectService) FindProjectByMemId(ctx context.Context, in *ProjectRequest, opts ...grpc.CallOption) (*ProjectResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.FindProjectByMemId(ctx, in, opts...)
}

func (m *defaultProjectService) FindProjectTemplate(ctx context.Context, in *FindProjectTemplateRequest, opts ...grpc.CallOption) (*FindProjectTemplateResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.FindProjectTemplate(ctx, in, opts...)
}

func (m *defaultProjectService) SaveProject(ctx context.Context, in *SaveProjectReq, opts ...grpc.CallOption) (*SaveProjectRsp, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.SaveProject(ctx, in, opts...)
}

func (m *defaultProjectService) ProjectDetail(ctx context.Context, in *ProjectDetailRequest, opts ...grpc.CallOption) (*ProjectDetailResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.ProjectDetail(ctx, in, opts...)
}

func (m *defaultProjectService) RecycleOrRecoverProject(ctx context.Context, in *RecycleProjectRequest, opts ...grpc.CallOption) (*RecycleProjectResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.RecycleOrRecoverProject(ctx, in, opts...)
}

func (m *defaultProjectService) UpdateCollectProject(ctx context.Context, in *UpdateCollectProjectRequest, opts ...grpc.CallOption) (*UpdateCollectProjectResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.UpdateCollectProject(ctx, in, opts...)
}

func (m *defaultProjectService) UpdateProject(ctx context.Context, in *UpdateProjectRequest, opts ...grpc.CallOption) (*UpdateProjectResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.UpdateProject(ctx, in, opts...)
}

func (m *defaultProjectService) ProjectMemberList(ctx context.Context, in *ProjectMemberListRequest, opts ...grpc.CallOption) (*ProjectMemberListResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.ProjectMemberList(ctx, in, opts...)
}

func (m *defaultProjectService) FindProjectById(ctx context.Context, in *FindProjectByIdRequest, opts ...grpc.CallOption) (*ProjectMessage, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.FindProjectById(ctx, in, opts...)
}

func (m *defaultProjectService) FindProjectByIds(ctx context.Context, in *FindProjectByIdsRequest, opts ...grpc.CallOption) (*FindProjectByIdsResponse, error) {
	client := v1.NewProjectServiceClient(m.cli.Conn())
	return client.FindProjectByIds(ctx, in, opts...)
}
