// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5

package types

type CollectProjectReq struct {
	ProjectCode string `form:"projectCode"`
	Type        string `form:"type"`
}

type CollectProjectRsp struct {
	ProjectList []*Project
}

type EditProjectReq struct {
	ProjectCode        string  `form:"projectCode"`
	Cover              string  `form:"cover,optional"`
	Name               string  `form:"name,optional"`
	Description        string  `form:"description,optional"`
	Schedule           float64 `form:"schedule,optional"`
	Private            int     `form:"private,optional"`
	Prefix             string  `form:"prefix,optional"`
	OpenPrefix         int     `form:"open_prefix,optional"`
	OpenBeginTime      int     `form:"open_begin_time,optional"`
	OpenTaskPrivate    int     `form:"open_task_private,optional"`
	TaskBoardTheme     string  `form:"task_board_theme,optional"`
	AutoUpdateSchedule int     `form:"auto_update_schedule,optional"`
}

type EditProjectRsp struct {
	ProjectList []*Project
}

type Executor struct {
	Name   string `json:"name"`
	Avatar string `json:"avatar"`
}

type GetCaptchaReq struct {
	Mobile string `form:"mobile"`
}

type GetCaptchaResp struct {
	Captcha string `json:"captcha"`
}

type GetOrgListReq struct {
}

type GetOrgListRsp struct {
	OrganizationList []OrganizationList `json:"organizationList"`
}

type IndexReq struct {
	Token string `header:"Authorization,optional"`
}

type IndexRsp struct {
	Menus []*MenuMessage `json:"menus"`
}

type ListTaskMemberReq struct {
	TaskCode string `form:"taskCode"`
	Page     int64  `form:"page,default=1"`
	PageSize int64  `form:"pageSize,default=10"`
}

type ListTaskMemberRsp struct {
	List  []*TaskMember `json:"list"`
	Total int64         `json:"total"`
	Page  int64         `json:"page"`
}

type LoginReq struct {
	Account  string `form:"account"`
	Password string `form:"password"`
}

type LoginRsp struct {
	Member           Member             `json:"member"`
	TokenList        TokenList          `json:"tokenList"`
	OrganizationList []OrganizationList `json:"organizationList"`
}

type Member struct {
	Name             string `json:"name"`
	Mobile           string `json:"mobile"`
	Status           int    `json:"status"`
	Code             string `json:"code"`
	CreateTime       string `json:"create_time"`
	LastLoginTime    string `json:"last_login_time"`
	OrganizationCode string `json:"organization_code"`
}

type MemberInfo struct {
	Id     int64  `json:"id"`
	Name   string `json:"name"`
	Code   string `json:"code"`
	Avatar string `json:"avatar"`
}

type MenuMessage struct {
	Id         int64          `json:"id"`
	Pid        int64          `json:"pid"`
	Title      string         `json:"title"`
	Icon       string         `json:"icon"`
	Url        string         `json:"url"`
	FilePath   string         `json:"file_path"`
	Params     string         `json:"params"`
	Node       string         `json:"node"`
	Sort       int32          `json:"sort"`
	Status     int32          `json:"status"`
	CreateBy   int64          `json:"create_by"`
	IsInner    int32          `json:"is_inner"`
	Values     string         `json:"values"`
	ShowSlider int32          `json:"show_slider"`
	StatusText string         `json:"statusText"`
	InnerText  string         `json:"innerText"`
	FullUrl    string         `json:"fullUrl"`
	Children   []*MenuMessage `json:"children"`
}

type MyTaskDisplay struct {
	ProjectCode        string      `json:"project_code"`
	Name               string      `json:"name"`
	Pri                int         `json:"pri"`
	ExecuteStatus      string      `json:"execute_status"`
	Description        string      `json:"description"`
	CreateBy           string      `json:"create_by"`
	DoneBy             string      `json:"done_by"`
	DoneTime           string      `json:"done_time"`
	CreateTime         string      `json:"create_time"`
	AssignTo           string      `json:"assign_to"`
	Deleted            int         `json:"deleted"`
	StageCode          string      `json:"stage_code"`
	TaskTag            string      `json:"task_tag"`
	Done               int         `json:"done"`
	BeginTime          string      `json:"begin_time"`
	EndTime            string      `json:"end_time"`
	RemindTime         string      `json:"remind_time"`
	Pcode              string      `json:"pcode"`
	Sort               int         `json:"sort"`
	Like               int         `json:"like"`
	Star               int         `json:"star"`
	DeletedTime        string      `json:"deleted_time"`
	Private            int         `json:"private"`
	IdNum              int         `json:"id_num"`
	Path               string      `json:"path"`
	Schedule           int         `json:"schedule"`
	VersionCode        string      `json:"version_code"`
	FeaturesCode       string      `json:"features_code"`
	WorkTime           int         `json:"work_time"`
	Status             int         `json:"status"`
	Code               string      `json:"code"`
	ProjectName        string      `json:"project_name"`
	Cover              string      `json:"cover"`
	AccessControlType  string      `json:"access_control_type"`
	WhiteList          string      `json:"white_list"`
	Order              int         `json:"order"`
	TemplateCode       string      `json:"template_code"`
	OrganizationCode   string      `json:"organization_code"`
	Prefix             string      `json:"prefix"`
	OpenPrefix         int         `json:"open_prefix"`
	Archive            int         `json:"archive"`
	ArchiveTime        string      `json:"archive_time"`
	OpenBeginTime      int         `json:"open_begin_time"`
	OpenTaskPrivate    int         `json:"open_task_private"`
	TaskBoardTheme     string      `json:"task_board_theme"`
	AutoUpdateSchedule int         `json:"auto_update_schedule"`
	HasUnDone          int         `json:"hasUnDone"`
	ParentDone         int         `json:"parentDone"`
	PriText            string      `json:"priText"`
	Executor           Executor    `json:"executor"`
	ProjectInfo        ProjectInfo `json:"projectInfo"`
}

type MyTaskListReq struct {
	Page     int64 `form:"page,default=1"`
	PageSize int64 `form:"pageSize,default=10"`
	TaskType int   `form:"taskType"`
	Type     int   `form:"type"`
}

type MyTaskListRsp struct {
	List  []*MyTaskDisplay `json:"list"`
	Total int64            `json:"total"`
}

type OrganizationList struct {
	Name        string `json:"name"`
	Avatar      string `json:"avatar"`
	Description string `json:"description"`
	OwnerCode   string `json:"owner_code"`
	CreateTime  string `json:"create_time"`
	Personal    int32  `json:"personal"`
	Address     string `json:"address"`
	Province    int32  `json:"province"`
	City        int32  `json:"city"`
	Area        int32  `json:"area"`
	Code        string `json:"code"`
}

type Project struct {
	Cover              string  `json:"cover"`
	Name               string  `json:"name"`
	Description        string  `json:"description"`
	AccessControlType  string  `json:"access_control_type"`
	WhiteList          string  `json:"white_list"`
	Order              int     `json:"order"`
	Deleted            int     `json:"deleted"`
	TemplateCode       string  `json:"template_code"`
	Schedule           float64 `json:"schedule"`
	CreateTime         string  `json:"create_time"`
	OrganizationCode   int64   `json:"organization_code"`
	DeletedTime        string  `json:"deleted_time"`
	Private            int     `json:"private"`
	Prefix             string  `json:"prefix"`
	OpenPrefix         int     `json:"open_prefix"`
	Archive            int     `json:"archive"`
	ArchiveTime        int64   `json:"archive_time"`
	OpenBeginTime      int     `json:"open_begin_time"`
	OpenTaskPrivate    int     `json:"open_task_private"`
	TaskBoardTheme     string  `json:"task_board_theme"`
	BeginTime          int64   `json:"begin_time"`
	EndTime            int64   `json:"end_time"`
	AutoUpdateSchedule int     `json:"auto_update_schedule"`
	Code               string  `json:"code"`
}

type ProjectAndMember struct {
	Project
	ProjectCode int64  `json:"project_code"`
	MemberCode  int64  `json:"member_code"`
	JoinTime    int64  `json:"join_time"`
	IsOwner     int64  `json:"is_owner"`
	Authorize   string `json:"authorize"`
	OwnerName   string `json:"owner_name"`
	Collected   int    `json:"collected"`
}

type ProjectInfo struct {
	Name string `json:"name"`
	Code string `json:"code"`
}

type ProjectListMember struct {
	Name    string `json:"name"`
	Email   string `json:"email"`
	Avatar  string `json:"avatar"`
	Code    string `json:"code"`
	IsOwner int    `json:"IsOwner"`
}

type ProjectMember struct {
	Id          int64  `json:"id"`
	ProjectCode int64  `json:"project_code"`
	MemberCode  int64  `json:"member_code"`
	JoinTime    int64  `json:"join_time"`
	IsOwner     int64  `json:"is_owner"`
	Authorize   string `json:"authorize"`
}

type ProjectMemberListReq struct {
	ProjectCode string `form:"projectCode"`
	PageSize    int64  `form:"pageSize,default=10"`
	Page        int64  `form:"page,default=1"`
}

type ProjectMemberListRsp struct {
	List  []*ProjectListMember `json:"list"`
	Total int64                `json:"total"`
	Page  int64                `json:"page"`
}

type ProjectSaveReq struct {
	Name         string `form:"name"`
	TemplateCode string `form:"templateCode"`
	Description  string `form:"description"`
	Id           int    `form:"id"`
}

type ProjectSaveRsp struct {
	Id               int64  `json:"id"`
	Cover            string `json:"cover"`
	Name             string `json:"name"`
	Description      string `json:"description"`
	Code             string `json:"code"`
	CreateTime       string `json:"create_time"`
	TaskBoardTheme   string `json:"task_board_theme"`
	OrganizationCode string `json:"organization_code"`
}

type ProjectTemplate struct {
	Id               int                   `json:"id"`
	Name             string                `json:"name"`
	Description      string                `json:"description"`
	Sort             int                   `json:"sort"`
	CreateTime       string                `json:"create_time"`
	OrganizationCode string                `json:"organization_code"`
	Cover            string                `json:"cover"`
	MemberCode       string                `json:"member_code"`
	IsSystem         int                   `json:"is_system"`
	TaskStages       []*TaskStagesOnlyName `json:"task_stages"`
	Code             string                `json:"code"`
}

type ProjectTemplateReq struct {
	Page     int64 `form:"page,default=1"`
	PageSize int64 `form:"pageSize,default=10"`
	ViewType int32 `form:"viewType"`
}

type ProjectTemplateRsp struct {
	Ptm   []*ProjectTemplate `json:"list"`
	Total int64              `json:"total"`
}

type ReadProjectReq struct {
	ProjectCode string `form:"projectCode"`
}

type ReadProjectRsp struct {
	Cover              string  `json:"cover"`
	Name               string  `json:"name"`
	Description        string  `json:"description"`
	AccessControlType  string  `json:"access_control_type"`
	WhiteList          string  `json:"white_list"`
	Order              int     `json:"order"`
	Deleted            int     `json:"deleted"`
	TemplateCode       string  `json:"template_code"`
	Schedule           float64 `json:"schedule"`
	CreateTime         string  `json:"create_time"`
	OrganizationCode   string  `json:"organization_code"`
	DeletedTime        string  `json:"deleted_time"`
	Private            int     `json:"private"`
	Prefix             string  `json:"prefix"`
	OpenPrefix         int     `json:"open_prefix"`
	Archive            int     `json:"archive"`
	ArchiveTime        int64   `json:"archive_time"`
	OpenBeginTime      int     `json:"open_begin_time"`
	OpenTaskPrivate    int     `json:"open_task_private"`
	TaskBoardTheme     string  `json:"task_board_theme"`
	BeginTime          int64   `json:"begin_time"`
	EndTime            int64   `json:"end_time"`
	AutoUpdateSchedule int     `json:"auto_update_schedule"`
	Code               string  `json:"code"`
	OwnerName          string  `json:"owner_name"`
	Collected          int     `json:"collected"`
	OwnerAvatar        string  `json:"owner_avatar"`
}

type ReadTaskReq struct {
	TaskCode string `form:"taskCode"`
}

type RecycleProjectReq struct {
	ProjectCode string `form:"projectCode"`
}

type RecycleProjectRsp struct {
	ProjectList []*Project
}

type RegisterReq struct {
	Email     string `form:"email"`
	Name      string `form:"name"`
	Password  string `form:"password"`
	Password2 string `form:"password2"`
	Mobile    string `form:"mobile"`
	Captcha   string `form:"captcha"`
}

type RegisterResp struct {
}

type SelfListReq struct {
	Page     int64  `form:"page,default=1"`
	PageSize int64  `form:"pageSize,default=10"`
	SelectBy string `form:"selectBy,optional"`
}

type SelfListRsp struct {
	List  []*ProjectAndMember `json:"list"`
	Total int64               `json:"total"`
}

type TaskDisplay struct {
	ProjectCode   string   `json:"project_code"`
	Name          string   `json:"name"`
	Pri           int      `json:"pri"`
	ExecuteStatus string   `json:"execute_status"`
	Description   string   `json:"description"`
	CreateBy      string   `json:"create_by"`
	DoneBy        string   `json:"done_by"`
	DoneTime      string   `json:"done_time"`
	CreateTime    string   `json:"create_time"`
	AssignTo      string   `json:"assign_to"`
	Deleted       int      `json:"deleted"`
	StageCode     string   `json:"stage_code"`
	TaskTag       string   `json:"task_tag"`
	Done          int      `json:"done"`
	BeginTime     string   `json:"begin_time"`
	EndTime       string   `json:"end_time"`
	RemindTime    string   `json:"remind_time"`
	Pcode         string   `json:"pcode"`
	Sort          int      `json:"sort"`
	Like          int      `json:"like"`
	Star          int      `json:"star"`
	DeletedTime   string   `json:"deleted_time"`
	Private       int      `json:"private"`
	IdNum         int      `json:"id_num"`
	Path          string   `json:"path"`
	Schedule      int      `json:"schedule"`
	VersionCode   string   `json:"version_code"`
	FeaturesCode  string   `json:"features_code"`
	WorkTime      int      `json:"work_time"`
	Status        int      `json:"status"`
	Code          string   `json:"code"`
	CanRead       int      `json:"canRead"`
	HasUnDone     int      `json:"hasUnDone"`
	ParentDone    int      `json:"parentDone"`
	HasComment    int      `json:"hasComment"`
	HasSource     int      `json:"hasSource"`
	Executor      Executor `json:"executor"`
	PriText       string   `json:"priText"`
	StatusText    string   `json:"statusText"`
	Liked         int      `json:"liked"`
	Stared        int      `json:"stared"`
	Tags          []int    `json:"tags"`
	ChildCount    []int    `json:"childCount"`
	ProjectName   string   `json:"projectName"`
	StageName     string   `json:"stageName"`
}

type TaskLog struct {
	Id           int64      `json:"id"`
	MemberCode   string     `json:"member_code"`
	Content      string     `json:"content"`
	Remark       string     `json:"remark"`
	Type         string     `json:"type"`
	CreateTime   string     `json:"create_time"`
	SourceCode   string     `json:"source_code"`
	ActionType   string     `json:"action_type"`
	ToMemberCode string     `json:"to_member_code"`
	IsComment    int        `json:"is_comment"`
	ProjectCode  string     `json:"project_code"`
	Icon         string     `json:"icon"`
	IsRobot      int        `json:"is_robot"`
	Member       MemberInfo `json:"member"`
}

type TaskLogReq struct {
	TaskCode string `form:"taskCode"`
	Page     int64  `form:"page,default=1"`
	PageSize int64  `form:"pageSize,default=10"`
	All      int    `form:"all"`
	Comment  int    `form:"comment"`
}

type TaskLogRsp struct {
	List  []*TaskLog `json:"list"`
	Total int64      `json:"total"`
	Page  int64      `json:"page"`
}

type TaskMember struct {
	Id                int64  `json:"id"`
	Name              string `json:"name"`
	Avatar            string `json:"avatar"`
	Code              string `json:"code"`
	IsExecutor        int    `json:"is_executor"`
	IsOwner           int    `json:"is_owner"`
	MemberAccountCode string `json:"membar_account_code"`
}

type TaskReq struct {
	StageCode string `form:"stageCode"`
}

type TaskRsp struct {
	List []*TaskDisplay `json:"list"`
}

type TaskSaveReq struct {
	Name        string `form:"name"`
	StageCode   string `form:"stage_code"`
	ProjectCode string `form:"project_code"`
	AssignTo    string `form:"assign_to"`
}

type TaskSortReq struct {
	PreTaskCode  string `form:"preTaskCode"`
	NextTaskCode string `form:"nextTaskCode"`
	ToStageCode  string `form:"toStageCode"`
}

type TaskSortRsp struct {
	List []int
}

type TaskStages struct {
	Name         string `json:"name"`
	ProjectCode  string `json:"project_code"`
	Sort         int    `json:"sort"`
	Description  string `json:"description"`
	CreateTime   string `json:"create_time"`
	Code         string `json:"code"`
	Deleted      int    `json:"deleted"`
	TasksLoading bool   `json:"tasksLoading"`
	FixedCreator bool   `json:"fixedCreator"`
	ShowTaskCard bool   `json:"showTaskCard"`
	Tasks        []int  `json:"tasks"`
	DoneTasks    []int  `json:"doneTasks"`
	UnDoneTasks  []int  `json:"unDoneTasks"`
}

type TaskStagesOnlyName struct {
	Name string `json:"name"`
}

type TaskStagesReq struct {
	ProjectCode string `form:"projectCode"`
	PageSize    int64  `form:"pageSize,default=10"`
	Page        int64  `form:"page,default=1"`
}

type TaskStagesResp struct {
	List  []*TaskStages `json:"list"`
	Total int64         `json:"total"`
}

type TokenList struct {
	AccessToken    string `json:"accessToken"`
	RefreshToken   string `json:"refreshToken"`
	TokenType      string `json:"tokenType"`
	AccessTokenExp int64  `json:"accessTokenExp"`
}
