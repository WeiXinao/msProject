// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: department.proto

package department_client

import (
	"context"

	"department/department"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = department.Request
	Response = department.Response

	Department interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultDepartment struct {
		cli zrpc.Client
	}
)

func NewDepartment(cli zrpc.Client) Department {
	return &defaultDepartment{
		cli: cli,
	}
}

func (m *defaultDepartment) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := department.NewDepartmentClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
